// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var t=16;var r=8;var o="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");var n=Object.prototype.toString;var e=Object.prototype.hasOwnProperty;var a="function"==typeof Symbol?Symbol:void 0,l="function"==typeof a?a.toStringTag:"";var f=o&&"symbol"==typeof Symbol.toStringTag?function(t){var r,o,a,f,u;if(null==t)return n.call(t);o=t[l],u=l,r=null!=(f=t)&&e.call(f,u);try{t[l]=void 0}catch(r){return n.call(t)}return a=n.call(t),r?t[l]=o:delete t[l],a}:function(t){return n.call(t)},u="function"==typeof Float64Array;var y="function"==typeof Float64Array?Float64Array:null;var c="function"==typeof Float64Array?Float64Array:void 0;var i=function(){var t,r,o;if("function"!=typeof y)return!1;try{r=new y([1,3.14,-3.14,NaN]),o=r,t=(u&&o instanceof Float64Array||"[object Float64Array]"===f(o))&&1===r[0]&&3.14===r[1]&&-3.14===r[2]&&r[3]!=r[3]}catch(r){t=!1}return t}()?c:function(){throw new Error("not implemented")};var p="function"==typeof Float32Array;var v=Number.POSITIVE_INFINITY,E="function"==typeof Float32Array?Float32Array:null;var m="function"==typeof Float32Array?Float32Array:void 0;var b=function(){var t,r,o;if("function"!=typeof E)return!1;try{r=new E([1,3.14,-3.14,5e40]),o=r,t=(p&&o instanceof Float32Array||"[object Float32Array]"===f(o))&&1===r[0]&&3.140000104904175===r[1]&&-3.140000104904175===r[2]&&r[3]===v}catch(r){t=!1}return t}()?m:function(){throw new Error("not implemented")};function A(o,n){if("object"==typeof(e=o)&&null!==e&&"Complex128Array"===e.constructor.name&&e.BYTES_PER_ELEMENT===t)return function(t,r){return new i(t.buffer,t.byteOffset+t.BYTES_PER_ELEMENT*r,2*(t.length-r))}(o,n);var e;if(function(t){return"object"==typeof t&&null!==t&&"Complex64Array"===t.constructor.name&&t.BYTES_PER_ELEMENT===r}(o))return function(t,r){return new b(t.buffer,t.byteOffset+t.BYTES_PER_ELEMENT*r,2*(t.length-r))}(o,n);throw new TypeError(function(){var t,r=arguments,o="https://stdlib.io/e/"+r[0]+"?";for(t=1;t<r.length;t++)o+="&arg[]="+encodeURIComponent(r[t]);return o}("invalid argument. First argument must be a complex-valued floating-point array. Value: `%s`.",o))}export{A as default};
//# sourceMappingURL=mod.js.map
